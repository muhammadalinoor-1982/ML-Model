{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1R2eT_nvRb9qmLha_GJ0ISCgerIgxNMXP","authorship_tag":"ABX9TyOE+Sn2HU1AmWNUWDcNA8pz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rpHa83jRCnwt"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TtLQIA9UC_lB","executionInfo":{"status":"ok","timestamp":1717942038092,"user_tz":-360,"elapsed":14019,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"9c58f075-9590-49a4-b9db-9012497bbcc0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Dataset/Titanic.csv')\n","df.sample(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"P4SgPDtODP5A","executionInfo":{"status":"ok","timestamp":1717942039102,"user_tz":-360,"elapsed":1018,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"b99c6cd4-374b-4d44-d63d-209ed4b82532"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived  Pclass                             Name     Sex  \\\n","847          848         0       3               Markoff, Mr. Marin    male   \n","746          747         0       3      Abbott, Mr. Rossmore Edward    male   \n","315          316         1       3  Nilsson, Miss. Helmina Josefina  female   \n","\n","      Age  SibSp  Parch     Ticket     Fare Cabin Embarked  \n","847  35.0      0      0     349213   7.8958   NaN        C  \n","746  16.0      1      1  C.A. 2673  20.2500   NaN        S  \n","315  26.0      0      0     347470   7.8542   NaN        S  "],"text/html":["\n","  <div id=\"df-b4859f9f-bed2-4425-992f-40e86c20e516\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>847</th>\n","      <td>848</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Markoff, Mr. Marin</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>349213</td>\n","      <td>7.8958</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>746</th>\n","      <td>747</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Abbott, Mr. Rossmore Edward</td>\n","      <td>male</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>C.A. 2673</td>\n","      <td>20.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>315</th>\n","      <td>316</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Nilsson, Miss. Helmina Josefina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>347470</td>\n","      <td>7.8542</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4859f9f-bed2-4425-992f-40e86c20e516')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4859f9f-bed2-4425-992f-40e86c20e516 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4859f9f-bed2-4425-992f-40e86c20e516');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24e536a3-1209-4c48-9142-1e36431391c1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24e536a3-1209-4c48-9142-1e36431391c1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24e536a3-1209-4c48-9142-1e36431391c1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1XMPXYwbEN4r","executionInfo":{"status":"ok","timestamp":1717942039103,"user_tz":-360,"elapsed":18,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"3ad928cd-0e63-42c7-dee7-78e442af5373"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 0 to 890\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  891 non-null    int64  \n"," 1   Survived     891 non-null    int64  \n"," 2   Pclass       891 non-null    int64  \n"," 3   Name         891 non-null    object \n"," 4   Sex          891 non-null    object \n"," 5   Age          714 non-null    float64\n"," 6   SibSp        891 non-null    int64  \n"," 7   Parch        891 non-null    int64  \n"," 8   Ticket       891 non-null    object \n"," 9   Fare         891 non-null    float64\n"," 10  Cabin        204 non-null    object \n"," 11  Embarked     889 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 83.7+ KB\n"]}]},{"cell_type":"code","source":["df['Survived'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aZxVkuj4Y9ga","executionInfo":{"status":"ok","timestamp":1717943264784,"user_tz":-360,"elapsed":625,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"a328dbd7-25d7-4e48-f6e9-4fce94bbfec7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Survived\n","0    512\n","1    263\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["plt.figure(figsize=(5, 4))\n","sns.scatterplot(x = 'Fare', y = 'Survived', hue = 'Survived', data = df)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"TkkAiQzQcVkV","executionInfo":{"status":"ok","timestamp":1717942039105,"user_tz":-360,"elapsed":17,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"d50b83c6-84e9-4b91-d8bd-f20c4e4a9d5c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(df)\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"l9f_th_oZL5M","executionInfo":{"status":"ok","timestamp":1717942040019,"user_tz":-360,"elapsed":929,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"4b6fd5fb-eb81-488c-f177-a33115f13572"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def drop_outliers(df, colums_name):\n","  iqr = 1.5 * (np.percentile(df[colums_name], 75) - np.percentile(df[colums_name], 25))\n","  df.drop(df[df[colums_name] > (iqr + np.percentile(df[colums_name], 75))].index, inplace = True)\n","  df.drop(df[df[colums_name] < (np.percentile(df[colums_name], 25) - iqr)].index, inplace = True)\n","\n","drop_outliers(df, 'Fare')"],"metadata":{"id":"ZRP4MwE1ZBiP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sns.boxplot(df)\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"wVD_KNUMaUZu","executionInfo":{"status":"ok","timestamp":1717942040021,"user_tz":-360,"elapsed":39,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"aa4612be-b16c-41d8-c492-3b6d180ffbb9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["y = df['Survived']"],"metadata":{"id":"6S2Gxr4GEzS5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = df.drop(['PassengerId', 'Survived', 'Name', 'Ticket', 'Cabin', 'Embarked'], axis = 1)"],"metadata":{"id":"3UweGbk9FOf2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8kuyc1XmFZsY","executionInfo":{"status":"ok","timestamp":1717942040021,"user_tz":-360,"elapsed":36,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"bea67b80-4bf9-4d6c-cc2a-56b3d7c6187a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 775 entries, 0 to 890\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Pclass  775 non-null    int64  \n"," 1   Sex     775 non-null    object \n"," 2   Age     613 non-null    float64\n"," 3   SibSp   775 non-null    int64  \n"," 4   Parch   775 non-null    int64  \n"," 5   Fare    775 non-null    float64\n","dtypes: float64(2), int64(3), object(1)\n","memory usage: 42.4+ KB\n"]}]},{"cell_type":"code","source":["X['Age'].median()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a6PSs6y5IzPb","executionInfo":{"status":"ok","timestamp":1717942040022,"user_tz":-360,"elapsed":32,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"8d77f13d-e911-4fe4-cc57-c6e68e0c089d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28.0"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["X['Age'] = X['Age'].fillna(X['Age'].median())"],"metadata":{"id":"g8cU33uEI8jF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Bq8IXVeJKUq","executionInfo":{"status":"ok","timestamp":1717942040022,"user_tz":-360,"elapsed":28,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"a750c9db-134b-4cbd-e749-bc8b2fd3dc83"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 775 entries, 0 to 890\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   Pclass  775 non-null    int64  \n"," 1   Sex     775 non-null    object \n"," 2   Age     775 non-null    float64\n"," 3   SibSp   775 non-null    int64  \n"," 4   Parch   775 non-null    int64  \n"," 5   Fare    775 non-null    float64\n","dtypes: float64(2), int64(3), object(1)\n","memory usage: 42.4+ KB\n"]}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()\n","X['Sex'] = le.fit_transform(X['Sex'])"],"metadata":{"id":"Jq2kDP8wJQOm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"D_EQc6AeKuIo","executionInfo":{"status":"ok","timestamp":1717942040023,"user_tz":-360,"elapsed":25,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"038efc80-2ed5-4597-f11a-a0d885fccb10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pclass  Sex   Age  SibSp  Parch     Fare\n","0         3    1  22.0      1      0   7.2500\n","2         3    0  26.0      0      0   7.9250\n","3         1    0  35.0      1      0  53.1000\n","4         3    1  35.0      0      0   8.0500\n","5         3    1  28.0      0      0   8.4583\n","..      ...  ...   ...    ...    ...      ...\n","886       2    1  27.0      0      0  13.0000\n","887       1    0  19.0      0      0  30.0000\n","888       3    0  28.0      1      2  23.4500\n","889       1    1  26.0      0      0  30.0000\n","890       3    1  32.0      0      0   7.7500\n","\n","[775 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-9a12ca1a-7857-4cfe-94ba-7605452f7411\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>7.2500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.9250</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>53.1000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.0500</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>886</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>23.4500</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.0000</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>775 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a12ca1a-7857-4cfe-94ba-7605452f7411')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a12ca1a-7857-4cfe-94ba-7605452f7411 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a12ca1a-7857-4cfe-94ba-7605452f7411');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-35e76d8f-2f6e-48dd-88f8-a7c550a2f3a3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-35e76d8f-2f6e-48dd-88f8-a7c550a2f3a3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-35e76d8f-2f6e-48dd-88f8-a7c550a2f3a3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b4b5f095-2396-4cc4-a109-ad0102e9d243\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b4b5f095-2396-4cc4-a109-ad0102e9d243 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 775,\n  \"fields\": [\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.782123201045865,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          57.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.578085353787758,\n        \"min\": 0.0,\n        \"max\": 65.0,\n        \"num_unique_values\": 203,\n        \"samples\": [\n          13.0,\n          16.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["plt.figure(figsize=(20,10))\n","sns.heatmap(X.corr(), annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":722},"id":"oG42SNKYdpvp","executionInfo":{"status":"ok","timestamp":1717942041290,"user_tz":-360,"elapsed":1290,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"b993725c-3ee0-4948-c755-7d1915cad168"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(7.5, 3.5))\n","corr = X.corr()\n","sns.set(style='white')\n","mask = np.zeros_like(corr)\n","mask[np.triu_indices_from(mask)] = True\n","f, ax = plt.subplots(figsize=(11, 9))\n","cmap = sns.diverging_palette(220, 10, as_cmap=True)\n","sns.heatmap(corr, mask=mask, cmap=cmap, vmax=.3, center=0, square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":764},"id":"0EknUdasKv80","executionInfo":{"status":"ok","timestamp":1717942041290,"user_tz":-360,"elapsed":27,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"58b11a28-8e5b-45ad-c0ea-983dc1d3775c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 750x350 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1100x900 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0gAAALaCAYAAAALPnMnAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABUjklEQVR4nO3de3zO9f/H8ec1zHEHyyFyynI+bMiZyBLzjS+hVspQkja+8fUtSkK+JYeMLYmv0FQqSeyrSaMTX6RCOggTWxjZUcxm+/z+6GM/V3O4Tttll8e92+d2c70/h+t17epyee59+FgMwzAEAAAAAJCXuwsAAAAAgOsFAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEylHTnpzJkzysnJUUBAQEHbunXrdOjQIXXs2FEdOnRwWYEAAAAAUFwshmEY9p40evRoVatWTdOmTZMkxcTEKCYmRn5+fsrKytKcOXPUp08flxcLAAAAAEXJoSF233//vbp06SJJMgxDb7/9tkaNGqUdO3bo4Ycf1tKlS11aJAAAAAAUB4cCUkZGhipXrixJ2rdvn9LS0jRo0CBJUo8ePXT48GHXVQgAAAAAxcShgFSlShUdPHhQkvT555/rlltuUe3atSVJ586dU+nSDk1tAgAAAAC3cijJ9O7dW7Nnz9a2bdv0xRdf6NFHHy3Y9+OPP6pu3bouKxAAAAAAiotDAemf//ynKlasqH379mnEiBEaNWpUwb4ffvhBoaGhLisQAAAAAIqLQ6vYAQAAAIAn4j5IAAAAAGDiPkgAAAAAYOI+SAAAAABg4j5IAAAAAGDiPkgAAAAAYOI+SAAAAABg4j5IAAAAAGDiPkgAAAAAYHJoDhIAAAAAeCKHV1NYu3at3n33Xf366686f/58of3ffvutU4UBAAAAQHFzqAfpo48+0nPPPacGDRooLS1NoaGh6tWrl8qUKaObbrpJI0aMcHWdAAAAAFDkHApIy5Yt0xNPPKHnn39ekvTggw/qpZdeUkJCggICAlSxYkWXFgkAAAAAxcGhgHTkyBG1bt1apUqVUqlSpXTmzBlJUqVKlTRy5EjFxsa6tEgAAAAAKA4OBaRKlSopJydHklS9evWCm8ZKUl5entLS0lxTHQAAAAAUI4cWaWjevLn279+vrl27qkePHnr11VdlGIZKly6txYsXKzg42MVlAgAAAEDRc+g+SLt379axY8fUp08fZWZm6umnn9bnn3+u/Px8tWjRQq+88opq165dFPUCAAAAQJFx2Y1ic3JylJOTo0qVKrnicgAAAABQ7FwWkAAAAACgpLN5DtKMGTPsuvDkyZPtLgYAAAAA3MnmHqQePXrYflGLRQkJCQ4XBQAAAADuwBA7AAAAADA5dB8kAAAAAPBEDgWk2NhYzZkz57L75syZo7feesupogAAAADAHRwKSG+//bbq1Klz2X316tXT22+/7VRRAAAAAOAODgWkY8eOqW7dupfdV7t2bf32229OFQUAAAAA7uBQQKpUqZKSk5Mvuy8pKUnlypVzqigAAAAAcAeHAlLnzp316quv6vjx41btJ06c0MKFC3XHHXe4pDgAAAAAKE4OLfOdkpKi+++/X2lpaerQoYOqVaumkydPavv27QoICNCqVatUvXr1oqgXAAAAAIqMw/dBSk9P17Jly7R9+3alp6fL399fHTt21LBhw+Tv7+/iMgEAAACg6NkVkA4ePKhVq1YpOTlZ1apVU69evdS5c+eirA8AAAAAio3NAWnXrl0aPny4Lly4oICAAKWnpys/P19TpkzRAw88UNR1AgAAAECRszkghYeHKz09XYsWLVKNGjV05swZTZo0STt37tSOHTuKuk4AAAAAKHI2r2L3yy+/KCIiQjVq1JD051LfTz/9tDIyMgqtZgcAAAAAJZHNASktLU0333yzVdvFsJSWlubaqgAAAADADRy6DxIAAAAAeCKb5yA1btxY5cuXl8VisWo/e/ZsoXaLxaJvvvnGtZUCAAAAQBErbeuBkZGRRVkHAAAAALidwzeKBQAAAABPwxwkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAU2l3F3A1Wamp7i4BTvIJCHB3CQAAAIDN6EECAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwEZAAAAAAwERAAgAAAAATAQkAAAAATAQkAAAAADARkAAAAADAREACAAAAABMBCQAAAABMBCQAAAAAMBGQAAAAAMBEQAIAAAAAEwEJAAAAAEwEJAAAAAAwORSQTp06ddX9P/zwg0PFAAAAAIA7ORSQ+vbtq/j4+ELt+fn5iomJ0f333+90YQAAAABQ3BwKSHfffbeefPJJ/etf/1JWVpYkKTExUffff7+WLFmif/3rXy4tEgAAAACKg8UwDMOREz///HNNnjxZpUqV0j333KOVK1fqtttu08svv6zAwECXFJeVmuqS68B9fAIC3F0CAAAAYDOHA5Ik/fzzz7rvvvuUm5urJk2a6L333lPp0qVdVhwBqeQjIAEAANy4Dh06pBkzZui7775TxYoV9fe//11PPvmkvL29r3rehAkTtHfvXp08eVJlypRRw4YNNXr0aHXp0qXIa3Z4Fbt169Zp6NChqlWrlkaOHKkDBw5o+PDhSk5OdmV9AAAAAEqgjIwMhYeHKzc3V9HR0Ro3bpzee+89zZw585rn5ubmatiwYVq4cKFmzZolf39/PfbYY9q1a1eR1+1QD9LYsWO1adMmPfTQQ5owYYLKli2rn3/+WU899ZSSk5M1adIkDR482Oni6EEq+ehBAgAAuDG9/vrrWrRokbZs2SJ/f39J0rvvvqtp06Zpy5Ytql69us3XysvLU0hIiLp27aoXXnihiCr+k0M9SPv27dOyZcv07LPPqmzZspKkxo0b64MPPtCDDz6oqVOnurJGAAAAACXMF198oY4dOxaEI0kKDQ1Vfn6+tm7date1SpUqJR8fH+Xm5rq4ysIcmjC0bt06VapUqVB7mTJlNGHCBIWEhDhdGAAAAICSKzExUQMHDrRq8/X1VdWqVZWYmHjN8w3DUF5enrKysrRmzRodOXJE06dPL6pyCzgUkC6Go4yMDB04cEDHjx/XHXfcIT8/P50/f15BQUEuLRIAAACAe1yr8yMhIeGy7ZmZmfL19S3U7ufnp4yMjGs+7+rVqzV58mRJUoUKFTRv3jy1atXKhoqd41BAys/PV1RUlGJjY3Xu3DlZLBatXr1afn5+ioyMVFBQkCIjI11dKwAAAAA7HI9Z7O4SHBYSEqLGjRsrLS1N8fHxevLJJxUTE6Nu3boV6fM6FJDmz5+vlStX6umnn1bHjh3Vq1evgn09evTQ+++/T0ACAAAA3M3L4UWrC1yph+hafH19lZWVVag9IyNDfn5+1zw/ICBAAeaCX3fccYcyMjI0e/bs6zMgffjhhxo/frzCwsKUl5dnta9OnTpKSkpySXEAAAAAnOCCgOSo+vXrF5prlJWVpVOnTql+/fp2X69Zs2b64osvXFXeFTn0E0tPT1dgYOBl9+Xl5enChQtOFQUAAACgZLvjjju0bds2ZWZmFrTFx8fLy8tLnTt3tvt633zzjWrXru3KEi/LoR6kevXqaevWrerYsWOhfTt37lSDBg2cLgwAAACAkywWtz11WFiYYmNjFRERoVGjRiklJUWzZs1SWFiY1T2QwsPDdezYMW3atEmS9Nlnn2nt2rXq3r27atSooYyMDMXFxemrr77SK6+8UuR1OxSQhg0bpueee06lS5dW7969JUknTpzQ7t27FRsbq5deesmlRQIAAAAoWfz8/LRixQq98MILioiIUMWKFTVo0CCNGzfO6rj8/HyraTu1a9dWTk6O5s6dq7S0NFWuXFmNGjVSbGys2rVrV+R1WwzDMBw5cdmyZYqOjta5c+d08RLly5fX2LFjNXz4cJcUl5Wa6pLrwH18zIl1AAAAKH4nlix3+ho3jxzm9DVKEod6kCRp+PDhuu+++/Tdd98pLS1Nfn5+atWqlXx8fFxZHwAAAAAUG4cDkiRVrFhRXbp0cVUtAAAAAFzJ4r5V7EoqmwNSamqqTp48qcaNG1u1//zzz1q4cKEOHTqkKlWqKDw8XD169HB5oQAAAADs5MZFGkoqmyPlK6+8okmTJlm1/fbbbxoyZIgSEhJUtmxZHThwQJGRkfr6669dXigAAAAAFDWbA9K3336rvn37WrUtX75cZ8+e1euvv641a9Zo8+bNCgoK0pIlS1xeKAAAAAAUNZsDUkpKSqH7G23ZskVNmjQpmIdUrlw5PfTQQ9q/f79rqwQAAABgPy+L89sNxuaAZLFYZLlkDOPvv/+u5ORktW3b1uq46tWrKy0tzXUVAgAAAHCMxcv57QZj8yu+9dZbtW3btoLHW7ZskcViUefOna2OO3XqlAK49w0AAADgdhYvi9PbjcbmVewefvhhPf3008rMzFSVKlX0zjvvqE6dOurUqZPVcV999ZUaNmzo8kIBAAAAoKjZHJD69eunlJQUrVy5UpmZmWrWrJmef/55lS79/5c4ffq0tmzZojFjxhRJsQAAAABQlCyGYRjuLuJKslJT3V0CnOTDcEsAAAC3SYld5fQ1qj8c5oJKSo4bb9YVAAAAAFyBzUPsAAAAAJQwXvSH2IuABAAAAHgqy423Cp2zCEgAAACApyIg2Y0+NwAAAAAwEZAAAAAAwMQQOwAAAMBDWVikwW4EJAAAAMBTMQfJbkRKAAAAADDRgwQAAAB4Ki96kOxFDxIAAAAAmOhBAgAAADyVhf4Qe/ETAwAAAAATPUgAAACAp2IOkt0ISAAAAICHsrDMt90ISAAAAACKxKFDhzRjxgx99913qlixov7+97/rySeflLe39xXPOXnypJYvX66tW7fq6NGj8vHxUdu2bTV+/HjdcsstRV4zAQkAAACAy2VkZCg8PFz16tVTdHS0UlJSNHPmTGVnZ2vKlClXPO+HH37Qpk2bNHDgQAUFBSktLU2vvfaaBg8erLi4OAUEBBRp3QQkAAAAwFO5cRW7VatW6Y8//lBMTIz8/f0lSXl5eZo2bZpGjRql6tWrX/a8Nm3a6OOPP1bp0v8fVVq3bq3u3btr7dq1GjFiRJHWzSp2AAAAgKfysji/OeiLL75Qx44dC8KRJIWGhio/P19bt2694nm+vr5W4UiSbr75ZgUEBOjkyZMO12MrepAAAAAAT+WCRRpCQkKuuj8hIeGy7YmJiRo4cKBVm6+vr6pWrarExES7ajh8+LBOnz6twMBAu85zBD1IAAAAAFwuMzNTvr6+hdr9/PyUkZFh83UMw9CMGTNUrVo1/e1vf3NliZdFDxIAAACAK7pSD1FxiY6O1vbt2/Wf//xHFSpUKPLnIyABAAAAnsrLfQPGfH19lZWVVag9IyNDfn5+Nl3jvffe06uvvqp///vf6tixo6tLvCyG2AEAAABwufr16xeaa5SVlaVTp06pfv361zx/06ZNmjp1qsaOHatBgwYVVZmFEJAAAAAAT2WxOL856I477tC2bduUmZlZ0BYfHy8vLy917tz5qufu2LFD48eP1+DBgxUREeFwDY5giB0AAADgoSxOLNPtrLCwMMXGxioiIkKjRo1SSkqKZs2apbCwMKt7IIWHh+vYsWPatGmTJOnQoUOKiIhQvXr19Pe//127d+8uODYgIEB16tQp0roJSAAAAABczs/PTytWrNALL7ygiIgIVaxYUYMGDdK4ceOsjsvPz1deXl7B4z179igrK0tZWVl64IEHrI4dMGCAZs6cWaR1WwzDMIr0GZyQlZrq7hLgJJ+AAHeXAAAAcMP6feOnTl+jSq+7XFBJyUEPEgAAAOCpLCw5YC8CEgAAAOCp3DgHqaQiIAEAAACeyolV6G5U9LkBAAAAgImABAAAAAAmhtgBAAAAnopFGuxGQAIAAAA8lDtvFFtSESkBAAAAwEQPEgAAAOCpWMXObvQgAQAAAICJHiQAAADAU3nRH2IvfmIAAAAAYKIHCQAAAPBUzEGy23UdkHwCAtxdAgAAAFByscy33a7rgDTzw03uLgFOmjigp1J37nJ3GXBSQLvb3V0CAABAsWAOEgAAAACYruseJAAAAACOs1joD7EXAQkAAADwVCzSYDciJQAAAACY6EECAAAAPBWr2NmNHiQAAAAAMNGDBAAAAHgqFmmwGz8xAAAAADDRgwQAAAB4KuYg2Y2ABAAAAHgoC8t8242ABAAAAHgqL2bU2IufGAAAAIAicejQIQ0fPlzBwcHq3LmzZs2apZycnGue99Zbb2nUqFHq0KGDGjVqpPj4+GKo9k8EJAAAAAAul5GRofDwcOXm5io6Olrjxo3Te++9p5kzZ17z3I8++khpaWnq1q1bMVRqjSF2AAAAgKdy4xykVatW6Y8//lBMTIz8/f0lSXl5eZo2bZpGjRql6tWrX/VcLy8vJScna+3atcVTsIkeJAAAAMBTWSzObw764osv1LFjx4JwJEmhoaHKz8/X1q1br3qulxvnTtGDBAAAAOCKQkJCrro/ISHhsu2JiYkaOHCgVZuvr6+qVq2qxMREl9XnagQkAAAAwFO5sScmMzNTvr6+hdr9/PyUkZHhhopsQ0ACAAAAcEVX6iHyVAQkAAAAwEO580axvr6+ysrKKtSekZEhPz8/N1RkGxZpAAAAAOBy9evXLzTXKCsrS6dOnVL9+vXdVNW1EZAAAAAAT+VlcX5z0B133KFt27YpMzOzoC0+Pl5eXl7q3LmzK15dkWCIHQAAAOCpLO7rDwkLC1NsbKwiIiI0atQopaSkaNasWQoLC7O6B1J4eLiOHTumTZs2FbR9//33+u2335SamipJ2rNnjyQpICBA7dq1K9K6CUgAAAAAXM7Pz08rVqzQCy+8oIiICFWsWFGDBg3SuHHjrI7Lz89XXl6eVdtbb72lDz/8sODxG2+8IUlq166dYmNji7Rui2EYRpE+gxNmfrjp2gfhujZxQE+l7tzl7jLgpIB2t7u7BAAA4ID0n39x+hr+jRu6oJKSgx4kAAAAwFM5MYfoRkVAAgAAADyVG5f5LqlYxQ4AAAAATPQgAQAAAJ7KjavYlVT8xAAAAADARA8SAAAA4KEsLNJgN3qQAAAAAMBEDxIAAADgqVjFzm4EJAAAAMBTeTFgzF78xAAAAADAREACAAAAABND7AAAAABPxRwkuxGQAAAAAE/FMt92IyABAAAAHspiYUaNvfiJAQAAAICJgAQAAAAAJobYAQAAAJ6KRRrsRkACAAAAPBWLNNiNIXYAAAAAYHKoByk3N1erV6/W999/rxMnTmjKlCmqV6+eNmzYoEaNGikwMNDVdQIAAACwF6vY2c3un1hSUpJ69+6t2bNn6+jRo/rf//6nP/74Q5L09ddf6z//+Y/LiwQAAACA4mB3QJoxY4YCAgL06aefavny5TIMo2Bf27Zt9fXXX7u0QAAAAAAO8rI4v91g7A5IO3fu1OjRoxUQECDLX1bFqFq1qk6dOuWy4gAAAACgONk9B6lUqVJWvUaX+v3331WhQgWniwIAAADgvL92aODa7O5Batu2rZYtW6bc3NyCNovFIsMw9N5776ljx44uLRAAAACAg7y8nN9uMHb3IE2YMEEPPPCA/va3v6lHjx6yWCx66623dODAAR05ckTvv/9+UdQJAAAAAEXO7kgYGBioDz74QK1atVJcXJxKlSqlzz77THXq1NH777+vOnXqFEWdAAAAAEqYQ4cOafjw4QoODlbnzp01a9Ys5eTkXPM8wzC0ePFide/eXS1bttT999+v3bt3F33BcvA+SLVr19bLL7/s6loAAAAAuJIb5yBlZGQoPDxc9erVU3R0tFJSUjRz5kxlZ2drypQpVz13yZIlWrBggSZMmKBGjRrprbfe0ogRI/TRRx+pdu3aRVq3QwEJAAAAQAngxoC0atUq/fHHH4qJiZG/v78kKS8vT9OmTdOoUaNUvXr1y553/vx5vf766xoxYoSGDRsmSWrTpo169+6tpUuXaurUqUVat90BaejQoVfc5+XlJR8fHzVp0kQDBw684osGAAAA4Nm++OILdezYsSAcSVJoaKief/55bd26Vffee+9lz/v222915swZhYaGFrR5e3urZ8+e2rRpU1GXbX9A8vHx0Q8//KBTp06pUaNGuummm3T69Gnt379fVatWVZ06dbRs2TItXbpUb775ppo1a1YUdQMAAAC4FhesQhcSEnLV/QkJCZdtT0xM1MCBA63afH19VbVqVSUmJl7xehf31a9f36o9MDBQK1asUHZ2tsqVK2dL6Q6x+yfWu3dv+fj46JNPPtGaNWu0ZMkSrVmzRhs3bpSPj48GDBigTz/9VHXr1tUrr7xSFDUDAAAAsEG+xeL05qjMzEz5+voWavfz81NGRsZVz/P29lbZsmWt2n19fWUYxlXPdQW7e5BiYmL0z3/+U7fccotVe61atRQREaG5c+dqwIABGjFihJ5//nmXFQoAAACg+F2ph8hT2d2DdPz48SvekddisSglJUWSVK1aNeXl5TlXHQAAAIASydfXV1lZWYXaMzIy5Ofnd9XzcnJydP78eav2zMxMWSyWq57rCnYHpBYtWmjBggU6fvy4Vftvv/2m6OhotWzZsuAxizQAAAAA7pNvOL85qn79+oXmGmVlZenUqVOF5hf99TxJOnz4sFV7YmKiatasWaTzjyQH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w4ZGw4YNjR49ehgvvPCC1XublZVlBAcHG3PnzrU69+233zZatmxppKamFrS98MILRps2bYwff/zR6Ny5szF+/Phiey03sqlTpxotWrQwMjMzDcMwjOeee84ICgoyzpw5YxiGYaxcudJo0qSJ1fualJRkNGnSxHjooYcK2p566ikjJCTEyM7OLmg7ffq0ERwcbKxcubKYXo1nsuWzZhiF/+58+umnjYYNGxrbtm0raMvMzDRatWplzJkzp6Dtv//9r9GqVSujYcOGRpMmTYwBAwYYCxcuNP7444+CY5KSkoyGDRsaDz74oNVzRkVFGUFBQUZ6erqrX7ZHutZ35KUuXLhgnDt3zggODjZWrVpV0H7xfd29e7fV8ffff7/Rp08f48KFC5d97ovv4dixY63aH3roISM8PNw1L/AGtmDBgoLP6KXb2rVrrY7Lzc01du3aZTRs2NBITEwsaL/zzjuNdu3aWX3u7PkOBdyFHiQbnT17Vs2aNSt47OfnpylTpqhr166Kjo5Whw4dVKtWLZuvl5GRoejoaCUkJCglJaWgW/nS36Y1bdpUS5cuVXR0tLp166bmzZtbDQ+51n7Yr2HDhoqLi9P//vc/ffXVV/r6668VGxurNWvW6K233lKTJk303Xff6ezZs+rdu7fVb9U6deqk7OxsHThwQO3atZMkTZgwQVu3btV9992nypUrM1+tGFy4cEHx8fHq1q2bfHx8JEl9+/bVu+++q02bNql///7at2+fGjZsaPWZrVWrlho3bmx1ra1bt6pPnz4qVapUwXvt6+urpk2bat++fcX3ojyQLZ+1K/Hx8VHHjh2tHnfq1El79uwpaOvTp486d+6sLVu2aMeOHdq+fbuioqK0bt06ffDBB6pQoULBsT179rS6fq9evbRw4UL98ssvatu2rQtftee62nfk7t27NX/+fP34448Fw6sk6ddff7W6hr+/v4KCggoenzt3Tnv27NH48eNVqlSpqz5/ly5drB4HBgZq+/btjr8gFChXrpxWrlxp1Va7dm2tXbtWy5cv15EjR3T27NmCfb/++qtuvfXWgsft27e3+rzZ8x0KuAsByUYX/4KwWCyqXLmyatSoURBG0tPT1aBBA7uuN3HiRH333XeKiIjQbbfdpkqVKumdd97Rxx9/XHDM6NGj5eXlpQ8//FAxMTEKCAjQkCFDFBERIYvFcs39cIy3t7e6deumbt26SZK+/PJLjRo1Sq+++qpiYmKUlpYmSQVDIf/q+PHjBX8uV66c7rrrLi1evFj33HOP/Pz8iv4F3OC2bt2q1NRU3XnnncrMzJT05z/Gq1atqri4OPXv318nT55UQEBAoXMDAgJ0/vz5gsdpaWlasWLFZecTsuCD8671WbuSy713N910kw4dOmTV5ufnp/79+6t///4yDEMLFizQwoULtXr1ag0dOvSK16tSpYqkP4fywTZX+o48duyYRowYoebNm2vatGmqVq2aypQpo1GjRll91qT//7lflJmZqfz8/CvOVbvUxV+GXFSmTBmGm7uIl5eXWrRoYdW2adMmPf3007r//vs1btw4+fv769SpU4qIiCj0vv519Vd7vkMBdyEg2ehyf0Fc5O/vr5MnT9p8rfPnz+uzzz7TxIkTrSaEv/3221bHeXt7a8yYMRozZoyOHDmiDz74QNHR0apVq5b69+9/zf1wja5du6px48YF//i6GHJiYmJ08803Fzr+0l6Jn3/+WcuWLVPTpk21cuVKDRw4UIGBgcVT+A1q/fr1kqRJkyZp0qRJVvvS0tJ0+vRpVatWTT/99FOhc1NTU63mqvj5+albt2568MEHCx17tTktcMxfP2tXkpqaWqjt9OnTV53HZLFY9Mgjj2jhwoWFrv/X6/3++++SLr/IAy7vSt+RX375pc6ePWu1XPuFCxcKFtK41F9/sefj4yMvLy+7vl9RPOLj49WkSROrBVR27tx52WP/+r7a8x0KuAvjsVygY8eO2r59e6FJo1eSk5Oj/Px8q99AnzlzpmDFnsupW7euxo8fL39/fyUmJtq9H7a5+A+jS2VnZ+v48eMFv91s1aqVypcvrxMnTqhFixaFtsqVK0v6831+6qmn1LJlS7377rtq0KCBnnrqKVZWKkLnzp1TQkKC7rrrLr355ptW2yuvvKILFy5ow4YNat68ufbv36+kpKSCc5OTk/Xzzz9bXa9jx446cOCAmjZtWuh9rl+/fnG/PI9iy2ftSrKysvS///3P6vG2bdsKhmedOXNG2dnZhc67OKTrr8Fn06ZNVo83btyo8uXLc/8eF8jOzpbFYlHp0v//+9iPP/7Ypr8HK1SooODgYH300Uesbnadyc7OLtSLfvGXU9di63co4E70ILnAsGHD9NFHH+mhhx7S6NGjVbt2bSUlJenXX3/Vv/71r0LH+/j4qEWLFlqyZIkCAgJUunRpLV68WJUqVbL6TeYTTzyhZs2aqWnTpipfvry2bNmijIwMdejQwab9sF/fvn115513qkuXLqpWrZpSUlK0cuVKpaWlKTw8XNKfc1DGjh2r2bNn68SJE2rXrp1KlSqlpKQkJSQkKDo6WuXLl9eCBQuUlJSkjz76SN7e3po1a5YGDBig1157TWPGjHHzK/VMCQkJOnv2rB5++GG1b9++0P7//Oc/iouL04oVK7Ro0SI9/vjjBe9FTEyMqlSpYvXbzrFjx2rQoEF65JFHdN9996lKlSr6/ffftXPnTt1+++3cTd4JtnzWrsTf31/PPvusxo4dKx8fHy1ZskSGYRScd/jwYY0ePVoDBgxQmzZtVKFCBR08eFBLliyRj49PoaE9R48e1aRJk9SnTx/9+OOPWrx4scLDwxkS6wIXv48mTZqksLAwHThwQMuWLbP55r///Oc/NWzYMA0bNkwPPvig/Pz89MMPP6hy5coaNGhQUZaOq+jUqZOmT5+uV199Va1atdLnn39u9UuLq7H1OxRwJwKSC1SuXFnvvPOO5s6dqzlz5ujcuXO65ZZbLjss56K5c+dqypQpmjhxovz9/fXwww/r7NmzeuONNwqOad26tT7++GMtW7ZMeXl5uvXWWzVnzhx16tTJpv2wX2RkpLZs2aKZM2cqNTVVlStXVqNGjbR8+XKr4DlixAhVr15dy5Yt08qVK1W6dGnVqVNH3bt3V5kyZfTtt99q6dKlev755wuWjQ4MDNT48eM1e/Zsde/e/YpDNuG4uLg41axZ87LhSJL69++vF198USdPntQbb7yh559/XhMmTFD16tX1xBNPaO3atVZzGerWrav3339fUVFRmjZtms6ePauqVauqbdu2atSoUXG9LI9k62ftcqpWraoJEyZo1qxZOnr0qBo0aKClS5cW9DzVrVtX999/v7Zu3ar3339ff/zxh6pXr64OHTro8ccf1y233GJ1vXHjxmnnzp36xz/+oVKlSunBBx/UuHHjiuy130gaNWqkl156STExMRo1apSaNGmi+fPn68knn7Tp/Ntvv11vvvmmoqKiNGnSJHl5ealBgwY2n4+iERYWpuTkZK1cuVJLly5Vly5dNHfuXN133302nX+t71DA3SyGYRjuLgIA3C09PV133XWXhg0bpsjISHeXg2KQnJyskJAQzZ8/X71793Z3OQCA6wQ9SABuSIsXL1aVKlV0yy236NSpU3rjjTeUl5engQMHurs0AADgRgQkADckLy8vvfbaa0pJSVGpUqUUFBSkFStWqEaNGu4uDQAAuBFD7AAAAADAxDLfAAAAAGAiIAEAAACAiYAEAAAAACYCEgAAAACYCEgAAAAAYCIgAQAAAICJgAQAAAAAJgISAAAAAJgISAAAAABg+j9Ptc6DY1pztQAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_scalled = sc.fit_transform(X)"],"metadata":{"id":"8meck--QW0wi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_scalled"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5MgMbosOXTMp","executionInfo":{"status":"ok","timestamp":1717942041291,"user_tz":-360,"elapsed":25,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"f5025981-6ef4-44e3-9902-9e28a32f6b20"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.70852824,  0.67787193, -0.5283213 ,  0.62560563, -0.43371803,\n","        -0.77911707],\n","       [ 0.70852824, -1.4752049 , -0.21518215, -0.48642273, -0.43371803,\n","        -0.7293725 ],\n","       [-2.01658037, -1.4752049 ,  0.48938093,  0.62560563, -0.43371803,\n","         2.59982835],\n","       ...,\n","       [ 0.70852824, -1.4752049 , -0.05861258,  0.62560563,  2.11273252,\n","         0.41475242],\n","       [-2.01658037,  0.67787193, -0.21518215, -0.48642273, -0.43371803,\n","         0.89745891],\n","       [ 0.70852824,  0.67787193,  0.25452657, -0.48642273, -0.43371803,\n","        -0.74226924]])"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["Link: https://www.kaggle.com/code/faressayah/support-vector-machine-pca-tutorial-for-beginner"],"metadata":{"id":"-y6HSiKZ0TCq"}},{"cell_type":"code","source":["# from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","# def print_score(clf, X_train, y_train, X_test, y_test, train=True):\n","#     if train:\n","#         pred = clf.predict(X_train)\n","#         clf_report = pd.DataFrame(classification_report(y_train, pred, output_dict=True))\n","#         print(\"Train Result:\\n================================================\")\n","#         print(f\"Accuracy Score: {accuracy_score(y_train, pred) * 100:.2f}%\")\n","#         print(\"_______________________________________________\")\n","#         print(f\"CLASSIFICATION REPORT:\\n{clf_report}\")\n","#         print(\"_______________________________________________\")\n","#         print(f\"Confusion Matrix: \\n {confusion_matrix(y_train, pred)}\\n\")\n","\n","#     elif train==False:\n","#         pred = clf.predict(X_test)\n","#         clf_report = pd.DataFrame(classification_report(y_test, pred, output_dict=True))\n","#         print(\"Test Result:\\n================================================\")\n","#         print(f\"Accuracy Score: {accuracy_score(y_test, pred) * 100:.2f}%\")\n","#         print(\"_______________________________________________\")\n","#         print(f\"CLASSIFICATION REPORT:\\n{clf_report}\")\n","#         print(\"_______________________________________________\")\n","#         print(f\"Confusion Matrix: \\n {confusion_matrix(y_test, pred)}\\n\")"],"metadata":{"id":"_Q6Nijmkq6EH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Support Vector Machines (Kernels)\n","\n","\n","#*C parameter:*\n","Controlls trade-off between classifying training points correctly and having a smooth decision boundary.\n","Small C (loose) makes cost (penalty) of misclassification low (soft margin)\n","Large C (strict) makes cost of misclassification high (hard margin), forcing the model to explain input data stricter and potentially over it.\n","\n","\n","#*gamma parameter:*\n","Controlls how far the influence of a single training set reaches.\n","Large gamma: close reach (closer data points have high weight)\n","Small gamma: far reach (more generalized solution)\n","\n","\n","#*degree parameter :*\n","Degree of the polynomial kernel function ('poly'). Ignored by all other kernels.\n","__________________________________________________________________________\n","\n","\n","\n","A common approach to find the right hyperparameter values is to use grid search. It is often faster to first do a very coarse grid search, then a finer grid search around the best values found. Having a good sence of the what each hyperparameter actually does can also help you search in the right part of the hyperparameter space."],"metadata":{"id":"CFVIKFYYrG-6"}},{"cell_type":"code","source":["# #Linear Kernel SVM\n","# from sklearn.svm import LinearSVC\n","\n","# model = LinearSVC(loss='hinge', dual=True)\n","# model.fit(X_train, y_train)\n","\n","# print_score(model, X_train, y_train, X_test, y_test, train=True)\n","# print_score(model, X_train, y_train, X_test, y_test, train=False)"],"metadata":{"id":"SI9cLR5asB7K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# #Polynomial Kernel SVM\n","# from sklearn.svm import SVC\n","\n","# # The hyperparameter coef0 controls how much the model is influenced by high degree ploynomials\n","# model = SVC(kernel='poly', degree=2, gamma='auto', coef0=1, C=5)\n","# model.fit(X_train, y_train)\n","\n","# print_score(model, X_train, y_train, X_test, y_test, train=True)\n","# print_score(model, X_train, y_train, X_test, y_test, train=False)"],"metadata":{"id":"cfAJDm_5sQRE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# #Radial Kernel SVM\n","# model = SVC(kernel='rbf', gamma=0.5, C=0.1)\n","# model.fit(X_train, y_train)\n","\n","# print_score(model, X_train, y_train, X_test, y_test, train=True)\n","# print_score(model, X_train, y_train, X_test, y_test, train=False)"],"metadata":{"id":"fFtzWkjtsgJ6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_scalled, y, test_size = 0.2, random_state = 42)"],"metadata":{"id":"ukZzxLC0a8by"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.svm import SVC\n","svc = SVC()\n","svm = svc.fit(X_train, y_train)"],"metadata":{"id":"IWY1vAhnUkr7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score"],"metadata":{"id":"akxVqp8sXUOu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred_train = svm.predict(X_train)\n","accuracy_train = accuracy_score(y_pred_train, y_train)\n","f1_train = f1_score(y_pred_train, y_train)"],"metadata":{"id":"6xfthkctU4D-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Train Data of NB: ','\\n')\n","print('Accuracy on Train Data: ', accuracy_train, '\\n')\n","print('F1_Score on Train Data: ', f1_train, '\\n')\n","print('Classification Report on Train Data: ', '\\n', '\\n', classification_report(y_train, y_pred_train, target_names=[' Not Survived','Survived']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KcA2DtqbVwuQ","executionInfo":{"status":"ok","timestamp":1717943511846,"user_tz":-360,"elapsed":555,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"7676124b-6a16-4758-ed3b-f3a2b567bdea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Data of NB:  \n","\n","Accuracy on Train Data:  0.8370967741935483 \n","\n","F1_Score on Train Data:  0.7362924281984334 \n","\n","Classification Report on Train Data:  \n"," \n","                precision    recall  f1-score   support\n","\n"," Not Survived       0.86      0.91      0.88       417\n","     Survived       0.78      0.69      0.74       203\n","\n","     accuracy                           0.84       620\n","    macro avg       0.82      0.80      0.81       620\n"," weighted avg       0.83      0.84      0.83       620\n","\n"]}]},{"cell_type":"code","source":["y_pred_test = svm.predict(X_test)\n","accuracy_test = accuracy_score(y_pred_test, y_test)\n","f1_test = f1_score(y_pred_test, y_test)"],"metadata":{"id":"dDYxzk7SawIN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('test Data of NB: ','\\n')\n","print('Accuracy on test Data: ', accuracy_test, '\\n')\n","print('F1_Score on test Data: ', f1_test, '\\n')\n","print('Classification Report on test Data: ', '\\n', '\\n', classification_report(y_test, y_pred_test, target_names=[' Not Survived','Survived']))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iJ7vLbWCa26J","executionInfo":{"status":"ok","timestamp":1717943687973,"user_tz":-360,"elapsed":18,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"04d05cdd-36f6-445d-c618-ea2fcdbdcf89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["test Data of NB:  \n","\n","Accuracy on test Data:  0.7806451612903226 \n","\n","F1_Score on test Data:  0.6909090909090909 \n","\n","Classification Report on test Data:  \n"," \n","                precision    recall  f1-score   support\n","\n"," Not Survived       0.79      0.87      0.83        95\n","     Survived       0.76      0.63      0.69        60\n","\n","     accuracy                           0.78       155\n","    macro avg       0.78      0.75      0.76       155\n"," weighted avg       0.78      0.78      0.78       155\n","\n"]}]},{"cell_type":"code","source":["c_train = confusion_matrix(y_pred_train, y_train)\n","c_test  = confusion_matrix(y_pred_test, y_test)\n","\n","print('Confusion Matrix on Train Data: ','\\n', c_train, '\\n')\n","print('Confusion Matrix on Test  Data: ', '\\n', c_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WWrrq44qbFYM","executionInfo":{"status":"ok","timestamp":1717943789627,"user_tz":-360,"elapsed":559,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"4b6f8a5c-dd21-4211-8810-b4d1770600ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix on Train Data:  \n"," [[378  62]\n"," [ 39 141]] \n","\n","Confusion Matrix on Test  Data:  \n"," [[83 22]\n"," [12 38]]\n"]}]},{"cell_type":"code","source":["sns.heatmap(c_train, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"bAlgYfUgbZyd","executionInfo":{"status":"ok","timestamp":1717943811822,"user_tz":-360,"elapsed":1662,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"32dde121-2a6d-4f24-d73f-0b77fffce332"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.heatmap(c_test, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":434},"id":"E0m9JTvnbi8y","executionInfo":{"status":"ok","timestamp":1717943826413,"user_tz":-360,"elapsed":2175,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"9776b158-945b-4d51-f789-0dc62c8b7140"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"6WF1l8hPbmbc"},"execution_count":null,"outputs":[]}]}