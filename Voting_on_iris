{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOleWizbp5w4WYLKorOS4R9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iB_5cXVAECLd","executionInfo":{"status":"ok","timestamp":1726410269174,"user_tz":-360,"elapsed":67812,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"e2291b95-f4f0-48a4-d834-05580fb9254f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"z-kYJVZMEM-I","executionInfo":{"status":"ok","timestamp":1726410287007,"user_tz":-360,"elapsed":3557,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Dataset/iris.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_cg_Kaw1Elci","executionInfo":{"status":"ok","timestamp":1726410322886,"user_tz":-360,"elapsed":904,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"f471b4f2-b768-4429-ade1-71c85f1a34b7"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  sepal_length  sepal_width  petal_length  petal_width  \\\n","0             0           5.1          3.5           1.4          0.2   \n","1             1           4.9          3.0           1.4          0.2   \n","2             2           4.7          3.2           1.3          0.2   \n","3             3           4.6          3.1           1.5          0.2   \n","4             4           5.0          3.6           1.4          0.2   \n","..          ...           ...          ...           ...          ...   \n","145         145           6.7          3.0           5.2          2.3   \n","146         146           6.3          2.5           5.0          1.9   \n","147         147           6.5          3.0           5.2          2.0   \n","148         148           6.2          3.4           5.4          2.3   \n","149         149           5.9          3.0           5.1          1.8   \n","\n","        species  \n","0        setosa  \n","1        setosa  \n","2        setosa  \n","3        setosa  \n","4        setosa  \n","..          ...  \n","145  versicolor  \n","146  versicolor  \n","147  versicolor  \n","148  versicolor  \n","149  versicolor  \n","\n","[150 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-62074fe2-6515-4f11-b1ef-59d47a576c2d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>145</td>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>146</td>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>147</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>148</td>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>149</td>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>versicolor</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62074fe2-6515-4f11-b1ef-59d47a576c2d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-62074fe2-6515-4f11-b1ef-59d47a576c2d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-62074fe2-6515-4f11-b1ef-59d47a576c2d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d51ecf2b-8883-4518-8774-5588600622a9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d51ecf2b-8883-4518-8774-5588600622a9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d51ecf2b-8883-4518-8774-5588600622a9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_425499a6-4679-480a-baf5-e25d0a42eb35\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_425499a6-4679-480a-baf5-e25d0a42eb35 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43,\n        \"min\": 0,\n        \"max\": 149,\n        \"num_unique_values\": 150,\n        \"samples\": [\n          73,\n          18,\n          118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"species\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"setosa\",\n          \"verginica\",\n          \"versicolor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()"],"metadata":{"id":"Jc9dLohZEu2u","executionInfo":{"status":"ok","timestamp":1726410353597,"user_tz":-360,"elapsed":422,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df['species_le'] = le.fit_transform(df['species'])"],"metadata":{"id":"06SoFGtSE2eE","executionInfo":{"status":"ok","timestamp":1726410364856,"user_tz":-360,"elapsed":407,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["X = df.drop(['Unnamed: 0', 'species', 'species_le'], axis=1)\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_H9V4AUnE5Oh","executionInfo":{"status":"ok","timestamp":1726410395379,"user_tz":-360,"elapsed":9,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"7a500add-af54-4ded-f3b9-0debe681082c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width\n","0             5.1          3.5           1.4          0.2\n","1             4.9          3.0           1.4          0.2\n","2             4.7          3.2           1.3          0.2\n","3             4.6          3.1           1.5          0.2\n","4             5.0          3.6           1.4          0.2\n","..            ...          ...           ...          ...\n","145           6.7          3.0           5.2          2.3\n","146           6.3          2.5           5.0          1.9\n","147           6.5          3.0           5.2          2.0\n","148           6.2          3.4           5.4          2.3\n","149           5.9          3.0           5.1          1.8\n","\n","[150 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-54da3e48-9678-472a-881a-bdfe39122122\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows Ã— 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54da3e48-9678-472a-881a-bdfe39122122')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54da3e48-9678-472a-881a-bdfe39122122 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54da3e48-9678-472a-881a-bdfe39122122');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33fbddcf-53ba-440e-a6f6-4fcc1a018478\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33fbddcf-53ba-440e-a6f6-4fcc1a018478')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33fbddcf-53ba-440e-a6f6-4fcc1a018478 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8cb42233-22a5-45ea-9faf-419a98ef57b5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8cb42233-22a5-45ea-9faf-419a98ef57b5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["y = df['species_le']\n","y.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"id":"n6jkqPWXFAi0","executionInfo":{"status":"ok","timestamp":1726410415838,"user_tz":-360,"elapsed":438,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"814c0dc7-4dcb-4c9d-95f8-e0529cec0546"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["species_le\n","0    50\n","1    50\n","2    50\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>species_le</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)"],"metadata":{"id":"oXG4mwVDFFp3","executionInfo":{"status":"ok","timestamp":1726410433977,"user_tz":-360,"elapsed":439,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()"],"metadata":{"id":"cuIwPf5KFKF5","executionInfo":{"status":"ok","timestamp":1726410449565,"user_tz":-360,"elapsed":430,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["X_train = sc.fit_transform(X_train)\n","X_test = sc.transform(X_test)"],"metadata":{"id":"mllxDXrTFN5b","executionInfo":{"status":"ok","timestamp":1726410460738,"user_tz":-360,"elapsed":463,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","from xgboost import XGBClassifier\n","from sklearn.ensemble import RandomForestClassifier, VotingClassifier"],"metadata":{"id":"WHTSBv1aFQnh","executionInfo":{"status":"ok","timestamp":1726411786721,"user_tz":-360,"elapsed":13,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["voting_set = [\n","    ('dtc', DecisionTreeClassifier()),\n","    ('xgb', XGBClassifier()),\n","    ('rfc', RandomForestClassifier())\n","    ]"],"metadata":{"id":"ZAPvERsnJI4a","executionInfo":{"status":"ok","timestamp":1726411710575,"user_tz":-360,"elapsed":432,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["vc = VotingClassifier(estimators=voting_set, voting='hard') # Also test voting='soft'"],"metadata":{"id":"YSJTgsO8KBwt","executionInfo":{"status":"ok","timestamp":1726412859015,"user_tz":-360,"elapsed":469,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["vc_model = vc.fit(X_train, y_train)"],"metadata":{"id":"SunNm7uZOaII","executionInfo":{"status":"ok","timestamp":1726412904223,"user_tz":-360,"elapsed":881,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, f1_score, precision_score, recall_score, classification_report\n","target_names = ['setosa', 'verginica', 'versicolor']"],"metadata":{"id":"I1sN1SXEOlE3","executionInfo":{"status":"ok","timestamp":1726412957936,"user_tz":-360,"elapsed":451,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["y_pred_train = vc_model.predict(X_train)\n","accuracy_train = accuracy_score(y_pred_train, y_train)\n","f1_train = f1_score(y_pred_train, y_train, average='weighted')"],"metadata":{"id":"1-a8pZIEOySm","executionInfo":{"status":"ok","timestamp":1726413015590,"user_tz":-360,"elapsed":441,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Show the over all performance on train data\n","print('Train Data of VC: ','\\n')\n","print('Accuracy on Train Data: ', accuracy_train, '\\n')\n","print('F1_Score on Train Data: ', f1_train, '\\n')\n","print('Classification Report on Train Data: ', '\\n', '\\n', classification_report(y_pred_train, y_train, target_names=target_names))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nu7LGv1MO_S7","executionInfo":{"status":"ok","timestamp":1726413033597,"user_tz":-360,"elapsed":421,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"171fb85e-1d47-4a5e-9f27-77f49dcce6ea"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Train Data of VC:  \n","\n","Accuracy on Train Data:  1.0 \n","\n","F1_Score on Train Data:  1.0 \n","\n","Classification Report on Train Data:  \n"," \n","               precision    recall  f1-score   support\n","\n","      setosa       1.00      1.00      1.00        40\n","   verginica       1.00      1.00      1.00        41\n","  versicolor       1.00      1.00      1.00        39\n","\n","    accuracy                           1.00       120\n","   macro avg       1.00      1.00      1.00       120\n","weighted avg       1.00      1.00      1.00       120\n","\n"]}]},{"cell_type":"code","source":["y_pred_test = vc_model.predict(X_test)\n","accuracy_test = accuracy_score(y_pred_test, y_test)\n","f1_test = f1_score(y_pred_test, y_test, average='weighted')"],"metadata":{"id":"zIfJwCMNPKZq","executionInfo":{"status":"ok","timestamp":1726413092255,"user_tz":-360,"elapsed":724,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# Show the over all performance on test data\n","print('Test Data of VC: ','\\n')\n","print('Accuracy on Test Data: ', accuracy_test, '\\n' )\n","print('F1 Score on Test Data: ', f1_test, '\\n')\n","print('Classification Report on Test Data: ', '\\n','\\n', classification_report(y_pred_test, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yuhcKYehPOdq","executionInfo":{"status":"ok","timestamp":1726413095047,"user_tz":-360,"elapsed":430,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"a2270f5f-b8d8-4ada-c756-85d4e57461b4"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Data of VC:  \n","\n","Accuracy on Test Data:  1.0 \n","\n","F1 Score on Test Data:  1.0 \n","\n","Classification Report on Test Data:  \n"," \n","               precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        10\n","           1       1.00      1.00      1.00         9\n","           2       1.00      1.00      1.00        11\n","\n","    accuracy                           1.00        30\n","   macro avg       1.00      1.00      1.00        30\n","weighted avg       1.00      1.00      1.00        30\n","\n"]}]},{"cell_type":"code","source":["# Apply Confusion Matrix\n","from sklearn.metrics import confusion_matrix\n","c_train = confusion_matrix(y_pred_train, y_train)\n","c_test  = confusion_matrix(y_pred_test, y_test)"],"metadata":{"id":"HtKVwFUwPeA8","executionInfo":{"status":"ok","timestamp":1726413140010,"user_tz":-360,"elapsed":420,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Results of Confusion Matrix on train and test data\n","print('Confusion Matrix on Train Data: ','\\n', c_train, '\\n')\n","print('Confusion Matrix on Test  Data: ', '\\n', c_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"807B250UPewR","executionInfo":{"status":"ok","timestamp":1726413152248,"user_tz":-360,"elapsed":434,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"04267e8f-e139-436d-ca2c-aa266a481567"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion Matrix on Train Data:  \n"," [[40  0  0]\n"," [ 0 41  0]\n"," [ 0  0 39]] \n","\n","Confusion Matrix on Test  Data:  \n"," [[10  0  0]\n"," [ 0  9  0]\n"," [ 0  0 11]]\n"]}]},{"cell_type":"code","source":["# Apply heatmap on train Data\n","sns.heatmap(c_train, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"ZhCxhvKoPhu1","executionInfo":{"status":"ok","timestamp":1726413175340,"user_tz":-360,"elapsed":930,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"03618d33-5913-4dfb-8f00-4fc09f1668bd"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Apply heatmap on test Data\n","sns.heatmap(c_test, annot=True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"RCeZw7ggPnQO","executionInfo":{"status":"ok","timestamp":1726413190713,"user_tz":-360,"elapsed":943,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"6f3f99ac-4a2b-42f1-b421-1d0bac05b15c"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"gGLCn33NPq_f"},"execution_count":null,"outputs":[]}]}