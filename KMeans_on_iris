{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPPPkD6vzHa7uMZlPKpWFiS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":61,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HdGIG3-m6MoO","executionInfo":{"status":"ok","timestamp":1725983216341,"user_tz":-360,"elapsed":3707,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"18ac8082-865d-480a-fcce-056a899b6113"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px"],"metadata":{"id":"Zcmfv4sG6jQS","executionInfo":{"status":"ok","timestamp":1725984108888,"user_tz":-360,"elapsed":507,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Dataset/iris.csv')\n","df.sample(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"M_PNontN7Xrj","executionInfo":{"status":"ok","timestamp":1725984223750,"user_tz":-360,"elapsed":485,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"dc8f6551-e73b-4855-af26-956a8ebac1d9"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0  sepal_length  sepal_width  petal_length  petal_width  \\\n","104         104           6.5          3.0           5.8          2.2   \n","28           28           5.2          3.4           1.4          0.2   \n","18           18           5.7          3.8           1.7          0.3   \n","54           54           6.5          2.8           4.6          1.5   \n","50           50           7.0          3.2           4.7          1.4   \n","\n","        species  \n","104  versicolor  \n","28       setosa  \n","18       setosa  \n","54    verginica  \n","50    verginica  "],"text/html":["\n","  <div id=\"df-b435773f-87e7-48ca-8c00-0722656b6615\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>species</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>104</th>\n","      <td>104</td>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.8</td>\n","      <td>2.2</td>\n","      <td>versicolor</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>28</td>\n","      <td>5.2</td>\n","      <td>3.4</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>18</td>\n","      <td>5.7</td>\n","      <td>3.8</td>\n","      <td>1.7</td>\n","      <td>0.3</td>\n","      <td>setosa</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>54</td>\n","      <td>6.5</td>\n","      <td>2.8</td>\n","      <td>4.6</td>\n","      <td>1.5</td>\n","      <td>verginica</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>50</td>\n","      <td>7.0</td>\n","      <td>3.2</td>\n","      <td>4.7</td>\n","      <td>1.4</td>\n","      <td>verginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b435773f-87e7-48ca-8c00-0722656b6615')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b435773f-87e7-48ca-8c00-0722656b6615 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b435773f-87e7-48ca-8c00-0722656b6615');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-796d43c8-8010-4f2d-890a-b93c78139e0d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-796d43c8-8010-4f2d-890a-b93c78139e0d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-796d43c8-8010-4f2d-890a-b93c78139e0d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33,\n        \"min\": 18,\n        \"max\": 104,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          28,\n          50,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7190271204899019,\n        \"min\": 5.2,\n        \"max\": 7.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5.2,\n          7.0,\n          6.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.38470768123342686,\n        \"min\": 2.8,\n        \"max\": 3.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.4,\n          3.2,\n          3.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.967993902429578,\n        \"min\": 1.4,\n        \"max\": 5.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.4,\n          4.7,\n          1.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8526429498916882,\n        \"min\": 0.2,\n        \"max\": 2.2,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.2,\n          1.4,\n          0.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"species\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"versicolor\",\n          \"setosa\",\n          \"verginica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["plt.scatter(df['sepal_length'],df['sepal_width'],df['petal_length'],df['petal_width'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"YO2Ba2kgFci9","executionInfo":{"status":"ok","timestamp":1725984227543,"user_tz":-360,"elapsed":1552,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"afd34e30-31b5-4db1-a0a1-bc779172783e"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x797b46148880>"]},"metadata":{},"execution_count":87},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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Z09s2rQJjz/+OJ566il8+umnjc5p7H03GAyoqalxdskO05y9h4WF4YMPPsCqVauwatUqREZGYty4cThy5EgrVu5Yq1evRnl5OR544IFGx7Snz/pVTdl3e/mcA8ALL7yA++67D7GxsXB3d8fgwYMxf/58zJgxo9E5Dvms23cgh34uJydHBAcHi6NHj9a/ZuuUzS+ZTCYRExMjXnrpJSdU2HrKysqEv7+/+Oijj6756+7u7mL58uUNXnv//fdFcHBwa5TnVLb2/kuu+p67u7uLhISEBq89+eSTIj4+vtE5PXv2FG+88UaD19atWycAiOrqaqfU6QzN2fu1jBkzRtx///2OLK1V3XLLLeKOO+6wOqY9ftabsu9fctXPuRBCrFixQkRERIgVK1aIY8eOic8++0x07NhRLF26tNE5jvis8whJCxw+fBglJSUYMmQI3Nzc4Obmhp07d+Jf//oX3NzcGlwQ1Zir6fPMmTOtULHzdOjQAb169Wp0H6GhoSguLm7wWnFxMUJDQ1ujPKeytfdfctX3PCwsDH379m3wWp8+fayermrsfff394eXl5dT6nSG5uz9Wm644QaXe9+vys7OxpYtWzBnzhyr49rbZ72p+/4lV/2cA8Czzz5bf5RkwIABmDlzJp5++mmrZwIc8VlnIGmB8ePHIy0tDampqfWPYcOGYcaMGUhNTYVWq7X5e1gsFqSlpSEsLKwVKnaeyspKnD17ttF9JCQkYOvWrQ1e27x5MxISElqjPKeytfdfctX3fNSoUQ3+BQEAnDp1CtHR0Y3OaS/ve3P2fi2pqaku975f9cknnyA4OBiTJ0+2Oq69vOdXNXXfv+Sqn3MAqK6uhkbTMB5otVqoqtroHIe87y06rkO/8stTNjNnzhQvvPBC/fNXX31VbNq0SZw9e1YcPnxY3HfffcLT01McP35cQrXN98c//lHs2LFDZGVliT179ogJEyaITp06iZKSEiHEr/e9Z88e4ebmJt5++21x8uRJ8fLLLwt3d3eRlpYmawvNZu/e28t7fvDgQeHm5ib+9re/idOnT4vPP/9ceHt7i2XLltWPeeGFF8TMmTPrn587d054e3uLZ599Vpw8eVK8//77QqvVio0bN8rYQrM1Z+//+Mc/xOrVq8Xp06dFWlqamDdvntBoNGLLli0yttAiFotFREVFieeff/5Xv9aeP+v27Lu9fM6FEGL27NkiPDxcrF27VmRlZYlvvvlGdOrUSTz33HP1Y5zxWWcgcbBfBpKxY8eK2bNn1z+fP3++iIqKEh4eHiIkJETcfvvt4siRI61faAtNmzZNhIWFCQ8PDxEeHi6mTZsmzpw5U//rv9y3EEJ8+eWXolevXsLDw0P069dPrFu3rpWrdgx7995e3nMhhPj+++9F//79hU6nE7GxsWLJkiUNfn327Nli7NixDV7bvn27GDRokPDw8BDdu3cXn3zySesV7ED27v3NN98UMTExwtPTU3Ts2FGMGzdObNu2rZWrdoxNmzYJACIzM/NXv9aeP+v27Ls9fc4NBoOYN2+eiIqKEp6enqJ79+7iT3/6kzAajfVjnPFZV4Swces1IiIiIifjNSREREQkHQMJERERScdAQkRERNIxkBAREZF0DCREREQkHQMJERERScdAQkRERNIxkBAREZF0DCREREQkHQMJERERScdAQkRERNIxkBAREZF0/x8pBAwvlryDRQAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["fig = px.scatter_3d(df, x='sepal_length', y='sepal_width', z='petal_length', color='petal_width', symbol='species')\n","# fig = px.scatter_3d(df['sepal_length'], df['sepal_width'], df['petal_length'], df['petal_width'], color='sepal_length')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"-SLm3GkwM8qo","executionInfo":{"status":"ok","timestamp":1725985811805,"user_tz":-360,"elapsed":20,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"8cc91ed7-bd3c-4310-d1f1-f858e915154b"},"execution_count":101,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"e03dff49-c24f-43e1-af03-efc79b7f5a0f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"e03dff49-c24f-43e1-af03-efc79b7f5a0f\")) {                    Plotly.newPlot(                        \"e03dff49-c24f-43e1-af03-efc79b7f5a0f\",                        [{\"hovertemplate\":\"species=setosa\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"setosa\",\"marker\":{\"color\":[0.2,0.2,0.2,0.2,0.2,0.4,0.3,0.2,0.2,0.1,0.2,0.2,0.1,0.1,0.2,0.4,0.4,0.3,0.3,0.3,0.2,0.4,0.2,0.5,0.2,0.2,0.4,0.2,0.2,0.2,0.2,0.4,0.1,0.2,0.2,0.2,0.2,0.1,0.2,0.2,0.3,0.3,0.2,0.6,0.4,0.3,0.2,0.2,0.2,0.2],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"setosa\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[5.1,4.9,4.7,4.6,5.0,5.4,4.6,5.0,4.4,4.9,5.4,4.8,4.8,4.3,5.8,5.7,5.4,5.1,5.7,5.1,5.4,5.1,4.6,5.1,4.8,5.0,5.0,5.2,5.2,4.7,4.8,5.4,5.2,5.5,4.9,5.0,5.5,4.9,4.4,5.1,5.0,4.5,4.4,5.0,5.1,4.8,5.1,4.6,5.3,5.0],\"y\":[3.5,3.0,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3.0,3.0,4.0,4.4,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3.0,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3.0,3.4,3.5,2.3,3.2,3.5,3.8,3.0,3.8,3.2,3.7,3.3],\"z\":[1.4,1.4,1.3,1.5,1.4,1.7,1.4,1.5,1.4,1.5,1.5,1.6,1.4,1.1,1.2,1.5,1.3,1.4,1.7,1.5,1.7,1.5,1.0,1.7,1.9,1.6,1.6,1.5,1.4,1.6,1.6,1.5,1.5,1.4,1.5,1.2,1.3,1.4,1.3,1.5,1.3,1.3,1.3,1.6,1.9,1.4,1.6,1.4,1.5,1.4],\"type\":\"scatter3d\"},{\"hovertemplate\":\"species=verginica\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"verginica\",\"marker\":{\"color\":[1.4,1.5,1.5,1.3,1.5,1.3,1.6,1.0,1.3,1.4,1.0,1.5,1.0,1.4,1.3,1.4,1.5,1.0,1.5,1.1,1.8,1.3,1.5,1.2,1.3,1.4,1.4,1.7,1.5,1.0,1.1,1.0,1.2,1.6,1.5,1.6,1.5,1.3,1.3,1.3,1.2,1.4,1.2,1.0,1.3,1.2,1.3,1.3,1.1,1.3],\"coloraxis\":\"coloraxis\",\"symbol\":\"diamond\"},\"mode\":\"markers\",\"name\":\"verginica\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[7.0,6.4,6.9,5.5,6.5,5.7,6.3,4.9,6.6,5.2,5.0,5.9,6.0,6.1,5.6,6.7,5.6,5.8,6.2,5.6,5.9,6.1,6.3,6.1,6.4,6.6,6.8,6.7,6.0,5.7,5.5,5.5,5.8,6.0,5.4,6.0,6.7,6.3,5.6,5.5,5.5,6.1,5.8,5.0,5.6,5.7,5.7,6.2,5.1,5.7],\"y\":[3.2,3.2,3.1,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2.0,3.0,2.2,2.9,2.9,3.1,3.0,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3.0,2.8,3.0,2.9,2.6,2.4,2.4,2.7,2.7,3.0,3.4,3.1,2.3,3.0,2.5,2.6,3.0,2.6,2.3,2.7,3.0,2.9,2.9,2.5,2.8],\"z\":[4.7,4.5,4.9,4.0,4.6,4.5,4.7,3.3,4.6,3.9,3.5,4.2,4.0,4.7,3.6,4.4,4.5,4.1,4.5,3.9,4.8,4.0,4.9,4.7,4.3,4.4,4.8,5.0,4.5,3.5,3.8,3.7,3.9,5.1,4.5,4.5,4.7,4.4,4.1,4.0,4.4,4.6,4.0,3.3,4.2,4.2,4.2,4.3,3.0,4.1],\"type\":\"scatter3d\"},{\"hovertemplate\":\"species=versicolor\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"versicolor\",\"marker\":{\"color\":[2.5,1.9,2.1,1.8,2.2,2.1,1.7,1.8,1.8,2.5,2.0,1.9,2.1,2.0,2.4,2.3,1.8,2.2,2.3,1.5,2.3,2.0,2.0,1.8,2.1,1.8,1.8,1.8,2.1,1.6,1.9,2.0,2.2,1.5,1.4,2.3,2.4,1.8,1.8,2.1,2.4,2.3,1.9,2.3,2.5,2.3,1.9,2.0,2.3,1.8],\"coloraxis\":\"coloraxis\",\"symbol\":\"square\"},\"mode\":\"markers\",\"name\":\"versicolor\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[6.3,5.8,7.1,6.3,6.5,7.6,4.9,7.3,6.7,7.2,6.5,6.4,6.8,5.7,5.8,6.4,6.5,7.7,7.7,6.0,6.9,5.6,7.7,6.3,6.7,7.2,6.2,6.1,6.4,7.2,7.4,7.9,6.4,6.3,6.1,7.7,6.3,6.4,6.0,6.9,6.7,6.9,5.8,6.8,6.7,6.7,6.3,6.5,6.2,5.9],\"y\":[3.3,2.7,3.0,2.9,3.0,3.0,2.5,2.9,2.5,3.6,3.2,2.7,3.0,2.5,2.8,3.2,3.0,3.8,2.6,2.2,3.2,2.8,2.8,2.7,3.3,3.2,2.8,3.0,2.8,3.0,2.8,3.8,2.8,2.8,2.6,3.0,3.4,3.1,3.0,3.1,3.1,3.1,2.7,3.2,3.3,3.0,2.5,3.0,3.4,3.0],\"z\":[6.0,5.1,5.9,5.6,5.8,6.6,4.5,6.3,5.8,6.1,5.1,5.3,5.5,5.0,5.1,5.3,5.5,6.7,6.9,5.0,5.7,4.9,6.7,4.9,5.7,6.0,4.8,4.9,5.6,5.8,6.1,6.4,5.6,5.1,5.6,6.1,5.6,5.5,4.8,5.4,5.6,5.1,5.1,5.9,5.7,5.2,5.0,5.2,5.4,5.1],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"sepal_length\"}},\"yaxis\":{\"title\":{\"text\":\"sepal_width\"}},\"zaxis\":{\"title\":{\"text\":\"petal_length\"}}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"petal_width\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"title\":{\"text\":\"species\"},\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('e03dff49-c24f-43e1-af03-efc79b7f5a0f');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["dfkms = df.drop(['Unnamed: 0', 'species'], axis=1)\n","dfkms"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"RAwmG0Ah7o6M","executionInfo":{"status":"ok","timestamp":1725983217038,"user_tz":-360,"elapsed":46,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"6e5ba88d-fe5a-48d2-cdb5-d35b285279cb"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width\n","0             5.1          3.5           1.4          0.2\n","1             4.9          3.0           1.4          0.2\n","2             4.7          3.2           1.3          0.2\n","3             4.6          3.1           1.5          0.2\n","4             5.0          3.6           1.4          0.2\n","..            ...          ...           ...          ...\n","145           6.7          3.0           5.2          2.3\n","146           6.3          2.5           5.0          1.9\n","147           6.5          3.0           5.2          2.0\n","148           6.2          3.4           5.4          2.3\n","149           5.9          3.0           5.1          1.8\n","\n","[150 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-e23933d5-9495-45a7-b345-38eb53b25f21\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e23933d5-9495-45a7-b345-38eb53b25f21')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e23933d5-9495-45a7-b345-38eb53b25f21 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e23933d5-9495-45a7-b345-38eb53b25f21');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f45f3b8e-bdf9-43ce-a30e-d8191fcca280\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f45f3b8e-bdf9-43ce-a30e-d8191fcca280')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f45f3b8e-bdf9-43ce-a30e-d8191fcca280 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_144b756b-c0a9-49d9-8df2-c64ad41b30f8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfkms')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_144b756b-c0a9-49d9-8df2-c64ad41b30f8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dfkms');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dfkms","summary":"{\n  \"name\": \"dfkms\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["Link: https://www.geeksforgeeks.org/elbow-method-for-optimal-value-of-k-in-kmeans/"],"metadata":{"id":"IlF3lvW-cMQ6"}},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","kms = KMeans(n_clusters = 3, random_state = 42)"],"metadata":{"id":"Q6ggL9KK9KSt","executionInfo":{"status":"ok","timestamp":1725983217038,"user_tz":-360,"elapsed":42,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["KMS_Model = kms.fit(dfkms)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TaL20Sv4-CT7","executionInfo":{"status":"ok","timestamp":1725983217039,"user_tz":-360,"elapsed":42,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"84d37790-34d4-4b24-f5e6-b457404fae46"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]}]},{"cell_type":"code","source":["y_pred = KMS_Model.predict(dfkms)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xAc_KZiL-1ra","executionInfo":{"status":"ok","timestamp":1725983217039,"user_tz":-360,"elapsed":39,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"ace4b479-29b6-4a17-bd96-5e2d81d91b4d"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2,\n","       2, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2,\n","       2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0], dtype=int32)"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["labels=[]\n","for i in y_pred:\n","  if i==1:\n","    labels.append('setosa')\n","  elif i==0:\n","    labels.append('versicolor')\n","  elif i==2:\n","    labels.append('virginica')"],"metadata":{"id":"l8goljW3_TLt","executionInfo":{"status":"ok","timestamp":1725986017525,"user_tz":-360,"elapsed":548,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":103,"outputs":[]},{"cell_type":"code","source":["labels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"8O2DHJY6BrAc","executionInfo":{"status":"ok","timestamp":1725986023369,"user_tz":-360,"elapsed":485,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"52d348c1-4d93-43b5-ffb5-95299a49e6d5"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'setosa',\n"," 'versicolor',\n"," 'versicolor',\n"," 'virginica',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'virginica',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'versicolor',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor',\n"," 'virginica',\n"," 'virginica',\n"," 'versicolor']"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["from scipy.spatial.distance import cdist\n","distortions = []\n","inertias = []\n","mapping1 = {}\n","mapping2 = {}\n","K = range(1, 10)\n","\n","for k in K:\n","    # Building and fitting the model\n","    kmeanModel = KMeans(n_clusters=k).fit(dfkms)\n","    kmeanModel.fit(dfkms)\n","\n","    distortions.append(sum(np.min(cdist(dfkms, kmeanModel.cluster_centers_,\n","                                        'euclidean'), axis=1)) / dfkms.shape[0])\n","    inertias.append(kmeanModel.inertia_)\n","\n","    mapping1[k] = sum(np.min(cdist(dfkms, kmeanModel.cluster_centers_,\n","                                   'euclidean'), axis=1)) / dfkms.shape[0]\n","    mapping2[k] = kmeanModel.inertia_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tluvD_DJeMMV","executionInfo":{"status":"ok","timestamp":1725986030131,"user_tz":-360,"elapsed":510,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"f902dc7b-3b62-421b-c518-16e9e7f6ad2c"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:1416: FutureWarning:\n","\n","The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","\n"]}]},{"cell_type":"code","source":["plt.plot(K, distortions, 'bx-')\n","plt.xlabel('Values of K')\n","plt.ylabel('Distortion')\n","plt.title('The Elbow Method using Distortion')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"iVqM1IUPea5H","executionInfo":{"status":"ok","timestamp":1725986042975,"user_tz":-360,"elapsed":1433,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"bcf1202a-ef00-458f-e1dc-9d305d735748"},"execution_count":106,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dfkms['labels'] = y_pred\n","dfkms"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"bAfEKKmthsnS","executionInfo":{"status":"ok","timestamp":1725986058596,"user_tz":-360,"elapsed":473,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"980d6c1d-bb9a-4f16-9964-4e3b4fb3db9c"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal_length  sepal_width  petal_length  petal_width  labels\n","0             5.1          3.5           1.4          0.2       1\n","1             4.9          3.0           1.4          0.2       1\n","2             4.7          3.2           1.3          0.2       1\n","3             4.6          3.1           1.5          0.2       1\n","4             5.0          3.6           1.4          0.2       1\n","..            ...          ...           ...          ...     ...\n","145           6.7          3.0           5.2          2.3       2\n","146           6.3          2.5           5.0          1.9       0\n","147           6.5          3.0           5.2          2.0       2\n","148           6.2          3.4           5.4          2.3       2\n","149           5.9          3.0           5.1          1.8       0\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-e885df7e-6628-47f9-b15b-f775aa7dd7d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal_length</th>\n","      <th>sepal_width</th>\n","      <th>petal_length</th>\n","      <th>petal_width</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e885df7e-6628-47f9-b15b-f775aa7dd7d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e885df7e-6628-47f9-b15b-f775aa7dd7d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e885df7e-6628-47f9-b15b-f775aa7dd7d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eebfddfe-9b21-4205-82f2-a689ae18d8bd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eebfddfe-9b21-4205-82f2-a689ae18d8bd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eebfddfe-9b21-4205-82f2-a689ae18d8bd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_84e47d04-f92b-486a-84fb-53cbdcb30621\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dfkms')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_84e47d04-f92b-486a-84fb-53cbdcb30621 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dfkms');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dfkms","summary":"{\n  \"name\": \"dfkms\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.828066127977863,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4358662849366982,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594662,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal_width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"labels\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["fig = px.scatter_3d(dfkms, x='sepal_length', y='sepal_width', z='petal_length', color='petal_width', symbol='labels')\n","fig.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"vI_zH1-qi18z","executionInfo":{"status":"ok","timestamp":1725986068498,"user_tz":-360,"elapsed":573,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"2cc1b621-b975-4d81-c801-d84e557ca1e5"},"execution_count":108,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"56da97a5-8eb5-4291-91fa-7d4d3eb07300\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"56da97a5-8eb5-4291-91fa-7d4d3eb07300\")) {                    Plotly.newPlot(                        \"56da97a5-8eb5-4291-91fa-7d4d3eb07300\",                        [{\"hovertemplate\":\"labels=1\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"1\",\"marker\":{\"color\":[0.2,0.2,0.2,0.2,0.2,0.4,0.3,0.2,0.2,0.1,0.2,0.2,0.1,0.1,0.2,0.4,0.4,0.3,0.3,0.3,0.2,0.4,0.2,0.5,0.2,0.2,0.4,0.2,0.2,0.2,0.2,0.4,0.1,0.2,0.2,0.2,0.2,0.1,0.2,0.2,0.3,0.3,0.2,0.6,0.4,0.3,0.2,0.2,0.2,0.2],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"1\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[5.1,4.9,4.7,4.6,5.0,5.4,4.6,5.0,4.4,4.9,5.4,4.8,4.8,4.3,5.8,5.7,5.4,5.1,5.7,5.1,5.4,5.1,4.6,5.1,4.8,5.0,5.0,5.2,5.2,4.7,4.8,5.4,5.2,5.5,4.9,5.0,5.5,4.9,4.4,5.1,5.0,4.5,4.4,5.0,5.1,4.8,5.1,4.6,5.3,5.0],\"y\":[3.5,3.0,3.2,3.1,3.6,3.9,3.4,3.4,2.9,3.1,3.7,3.4,3.0,3.0,4.0,4.4,3.9,3.5,3.8,3.8,3.4,3.7,3.6,3.3,3.4,3.0,3.4,3.5,3.4,3.2,3.1,3.4,4.1,4.2,3.1,3.2,3.5,3.6,3.0,3.4,3.5,2.3,3.2,3.5,3.8,3.0,3.8,3.2,3.7,3.3],\"z\":[1.4,1.4,1.3,1.5,1.4,1.7,1.4,1.5,1.4,1.5,1.5,1.6,1.4,1.1,1.2,1.5,1.3,1.4,1.7,1.5,1.7,1.5,1.0,1.7,1.9,1.6,1.6,1.5,1.4,1.6,1.6,1.5,1.5,1.4,1.5,1.2,1.3,1.4,1.3,1.5,1.3,1.3,1.3,1.6,1.9,1.4,1.6,1.4,1.5,1.4],\"type\":\"scatter3d\"},{\"hovertemplate\":\"labels=0\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"0\",\"marker\":{\"color\":[1.4,1.5,1.3,1.5,1.3,1.6,1.0,1.3,1.4,1.0,1.5,1.0,1.4,1.3,1.4,1.5,1.0,1.5,1.1,1.8,1.3,1.5,1.2,1.3,1.4,1.4,1.5,1.0,1.1,1.0,1.2,1.6,1.5,1.6,1.5,1.3,1.3,1.3,1.2,1.4,1.2,1.0,1.3,1.2,1.3,1.3,1.1,1.3,1.9,1.7,2.0,2.4,1.5,2.0,1.8,1.8,1.8,1.5,1.8,1.9,1.9,1.8],\"coloraxis\":\"coloraxis\",\"symbol\":\"diamond\"},\"mode\":\"markers\",\"name\":\"0\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[7.0,6.4,5.5,6.5,5.7,6.3,4.9,6.6,5.2,5.0,5.9,6.0,6.1,5.6,6.7,5.6,5.8,6.2,5.6,5.9,6.1,6.3,6.1,6.4,6.6,6.8,6.0,5.7,5.5,5.5,5.8,6.0,5.4,6.0,6.7,6.3,5.6,5.5,5.5,6.1,5.8,5.0,5.6,5.7,5.7,6.2,5.1,5.7,5.8,4.9,5.7,5.8,6.0,5.6,6.3,6.2,6.1,6.3,6.0,5.8,6.3,5.9],\"y\":[3.2,3.2,2.3,2.8,2.8,3.3,2.4,2.9,2.7,2.0,3.0,2.2,2.9,2.9,3.1,3.0,2.7,2.2,2.5,3.2,2.8,2.5,2.8,2.9,3.0,2.8,2.9,2.6,2.4,2.4,2.7,2.7,3.0,3.4,3.1,2.3,3.0,2.5,2.6,3.0,2.6,2.3,2.7,3.0,2.9,2.9,2.5,2.8,2.7,2.5,2.5,2.8,2.2,2.8,2.7,2.8,3.0,2.8,3.0,2.7,2.5,3.0],\"z\":[4.7,4.5,4.0,4.6,4.5,4.7,3.3,4.6,3.9,3.5,4.2,4.0,4.7,3.6,4.4,4.5,4.1,4.5,3.9,4.8,4.0,4.9,4.7,4.3,4.4,4.8,4.5,3.5,3.8,3.7,3.9,5.1,4.5,4.5,4.7,4.4,4.1,4.0,4.4,4.6,4.0,3.3,4.2,4.2,4.2,4.3,3.0,4.1,5.1,4.5,5.0,5.1,5.0,4.9,4.9,4.8,4.9,5.1,4.8,5.1,5.0,5.1],\"type\":\"scatter3d\"},{\"hovertemplate\":\"labels=2\\u003cbr\\u003esepal_length=%{x}\\u003cbr\\u003esepal_width=%{y}\\u003cbr\\u003epetal_length=%{z}\\u003cbr\\u003epetal_width=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"2\",\"marker\":{\"color\":[1.5,1.7,2.5,2.1,1.8,2.2,2.1,1.8,1.8,2.5,2.0,1.9,2.1,2.3,1.8,2.2,2.3,2.3,2.0,2.1,1.8,2.1,1.6,1.9,2.0,2.2,1.4,2.3,2.4,1.8,2.1,2.4,2.3,2.3,2.5,2.3,2.0,2.3],\"coloraxis\":\"coloraxis\",\"symbol\":\"square\"},\"mode\":\"markers\",\"name\":\"2\",\"scene\":\"scene\",\"showlegend\":true,\"x\":[6.9,6.7,6.3,7.1,6.3,6.5,7.6,7.3,6.7,7.2,6.5,6.4,6.8,6.4,6.5,7.7,7.7,6.9,7.7,6.7,7.2,6.4,7.2,7.4,7.9,6.4,6.1,7.7,6.3,6.4,6.9,6.7,6.9,6.8,6.7,6.7,6.5,6.2],\"y\":[3.1,3.0,3.3,3.0,2.9,3.0,3.0,2.9,2.5,3.6,3.2,2.7,3.0,3.2,3.0,3.8,2.6,3.2,2.8,3.3,3.2,2.8,3.0,2.8,3.8,2.8,2.6,3.0,3.4,3.1,3.1,3.1,3.1,3.2,3.3,3.0,3.0,3.4],\"z\":[4.9,5.0,6.0,5.9,5.6,5.8,6.6,6.3,5.8,6.1,5.1,5.3,5.5,5.3,5.5,6.7,6.9,5.7,6.7,5.7,6.0,5.6,5.8,6.1,6.4,5.6,5.6,6.1,5.6,5.5,5.4,5.6,5.1,5.9,5.7,5.2,5.2,5.4],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"sepal_length\"}},\"yaxis\":{\"title\":{\"text\":\"sepal_width\"}},\"zaxis\":{\"title\":{\"text\":\"petal_length\"}}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"petal_width\"}},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"legend\":{\"title\":{\"text\":\"labels\"},\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('56da97a5-8eb5-4291-91fa-7d4d3eb07300');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.metrics import f1_score\n","score = f1_score(labels, df['species'], average = 'micro')"],"metadata":{"id":"-6VW9NcwBs6Q","executionInfo":{"status":"ok","timestamp":1725986079361,"user_tz":-360,"elapsed":551,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}}},"execution_count":109,"outputs":[]},{"cell_type":"code","source":["score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WjT5m0HjDJpF","executionInfo":{"status":"ok","timestamp":1725986082505,"user_tz":-360,"elapsed":541,"user":{"displayName":"Aupu_AI","userId":"12893461163900296745"}},"outputId":"8ea23fb7-bd84-4668-9bc4-db26c602f901"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.42666666666666675"]},"metadata":{},"execution_count":110}]}]}